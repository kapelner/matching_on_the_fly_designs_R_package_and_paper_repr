% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/abstract_inference.R
\name{SeqDesignInference}
\alias{SeqDesignInference}
\title{Inference for A Sequential Design}
\description{
An abstract R6 Class that estimates, tests and provides intervals for a treatment effect in a sequential design.
This class takes a \code{SeqDesign} object as an input where this object
contains data for a fully completed sequential experiment (i.e. all treatment
assignments were allocated and all responses were collected). Then the user
specifies the type of estimation (mean_difference-or-medians or default_regression) and the type
of sampling assumption (i.e. the superpopulation assumption leading to MLE-or-KM-based inference or 
the finite population assumption implying randomization-exact-based inference) and then can query the
estimate and pval for the test. If the test is normal-theory based it is 
testing the population H_0: beta_T = 0 and if the test is a randomization test, 
it is testing the sharp null that H_0: Y_T_i = Y_C_i for all subjects. Confidence
interval construction is available for normal-theory based test type as well.
Begin Inference
}
\examples{

## ------------------------------------------------
## Method `SeqDesignInference$set_custom_randomization_statistic_function`
## ------------------------------------------------

seq_des = SeqDesign$new(n = 6, p = 10, design = "CRD")
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[2, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[3, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[4, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[5, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[6, 2 : 10])
seq_des$add_all_subject_responses(c(4.71, 1.23, 4.78, 6.11, 5.95, 8.43))

seq_des_inf = SeqDesignInferenceAllSimpleMeanDiff$new(seq_des)
#now let's set the statistic during randomization tests and intervals to the 
#studentized average difference (the t stat). 
seq_des_inf$set_custom_randomization_statistic_function(function(){
   yTs = private$seq_des_obj_priv_int$y[private$seq_des_obj_priv_int$w == 1]
  yCs = private$seq_des_obj_priv_int$y[private$seq_des_obj_priv_int$w == 0]
  (mean(yTs) - mean(yCs)) / sqrt(var(yTs) / length(yTs) + var(yCs) / length(yCs))
})

## ------------------------------------------------
## Method `SeqDesignInference$approximate_bootstrap_distribution_beta_hat_T`
## ------------------------------------------------

seq_des = SeqDesign$new(n = 6, p = 10, design = "CRD")
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[2, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[3, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[4, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[5, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[6, 2 : 10])
seq_des$add_all_subject_responses(c(4.71, 1.23, 4.78, 6.11, 5.95, 8.43))

seq_des_inf = SeqDesignInference$new(seq_des, test_type = "MLE-or-KM-based")
beta_hat_T_bs = seq_des_inf$approximate_bootstrap_distribution_beta_hat_T()
ggplot(data.frame(beta_hat_T_bs = beta_hat_T_bs)) + geom_histogram(aes(x = beta_hat_T_bs))
			

## ------------------------------------------------
## Method `SeqDesignInference$compute_bootstrap_confidence_interval`
## ------------------------------------------------

seq_des = SeqDesign$new(n = 6, p = 10, design = "CRD")
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[2, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[3, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[4, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[5, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[6, 2 : 10])
seq_des$add_all_subject_responses(c(4.71, 1.23, 4.78, 6.11, 5.95, 8.43))

seq_des_inf = SeqDesignInference$new(seq_des, test_type = "MLE-or-KM-based")
seq_des_inf$compute_confidence_interval()
					

## ------------------------------------------------
## Method `SeqDesignInference$compute_bootstrap_two_sided_pval`
## ------------------------------------------------

seq_des = SeqDesign$new(n = 6, p = 10, design = "CRD")
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[2, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[3, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[4, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[5, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[6, 2 : 10])
seq_des$add_all_subject_responses(c(4.71, 1.23, 4.78, 6.11, 5.95, 8.43))

seq_des_inf = SeqDesignInference$new(seq_des, test_type = "MLE-or-KM-based")
seq_des_inf$compute_bootstrap_two_sided_pval()
					

## ------------------------------------------------
## Method `SeqDesignInference$compute_beta_hat_T_randomization_distr_under_sharp_null`
## ------------------------------------------------

seq_des = SeqDesign$new(n = 6, p = 10, design = "CRD")
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[2, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[3, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[4, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[5, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[6, 2 : 10])
seq_des$add_all_subject_responses(c(4.71, 1.23, 4.78, 6.11, 5.95, 8.43))

seq_des_inf = SeqDesignInference$new(seq_des)
beta_hat_T_diff_ws = seq_des_inf$compute_beta_hat_T_randomization_distr_under_sharp_null()
ggplot(data.frame(beta_hat_T_diff_ws = beta_hat_T_diff_ws)) + geom_histogram(aes(x = beta_hat_T_diff_ws))

## ------------------------------------------------
## Method `SeqDesignInference$compute_two_sided_pval_for_treatment_effect_rand`
## ------------------------------------------------

seq_des = SeqDesign$new(n = 6, p = 10, design = "CRD")
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[2, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[3, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[4, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[5, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[6, 2 : 10])
seq_des$add_all_subject_responses(c(4.71, 1.23, 4.78, 6.11, 5.95, 8.43))

seq_des_inf = SeqDesignInference$new(seq_des)
seq_des_inf$compute_two_sided_pval_for_treatment_effect()
		

## ------------------------------------------------
## Method `SeqDesignInference$compute_confidence_interval_rand`
## ------------------------------------------------

seq_des = SeqDesign$new(n = 6, p = 10, design = "CRD")
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[2, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[3, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[4, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[5, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[6, 2 : 10])
seq_des$add_all_subject_responses(c(4.71, 1.23, 4.78, 6.11, 5.95, 8.43))

seq_des_inf = SeqDesignInference$new(seq_des, test_type = "MLE-or-KM-based")
seq_des_inf$compute_confidence_interval()
		
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SeqDesignInference-new}{\code{SeqDesignInference$new()}}
\item \href{#method-SeqDesignInference-set_custom_randomization_statistic_function}{\code{SeqDesignInference$set_custom_randomization_statistic_function()}}
\item \href{#method-SeqDesignInference-approximate_bootstrap_distribution_beta_hat_T}{\code{SeqDesignInference$approximate_bootstrap_distribution_beta_hat_T()}}
\item \href{#method-SeqDesignInference-compute_bootstrap_confidence_interval}{\code{SeqDesignInference$compute_bootstrap_confidence_interval()}}
\item \href{#method-SeqDesignInference-compute_bootstrap_two_sided_pval}{\code{SeqDesignInference$compute_bootstrap_two_sided_pval()}}
\item \href{#method-SeqDesignInference-compute_beta_hat_T_randomization_distr_under_sharp_null}{\code{SeqDesignInference$compute_beta_hat_T_randomization_distr_under_sharp_null()}}
\item \href{#method-SeqDesignInference-compute_two_sided_pval_for_treatment_effect_rand}{\code{SeqDesignInference$compute_two_sided_pval_for_treatment_effect_rand()}}
\item \href{#method-SeqDesignInference-compute_confidence_interval_rand}{\code{SeqDesignInference$compute_confidence_interval_rand()}}
\item \href{#method-SeqDesignInference-clone}{\code{SeqDesignInference$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesignInference-new"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesignInference-new}{}}}
\subsection{Method \code{new()}}{
Initialize a sequential experimental design estimation and test object after the sequential design is completed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesignInference$new(seq_des_obj, num_cores = 1, verbose = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{seq_des_obj}}{A SeqDesign object whose entire n subjects are assigned and response y is recorded within.}

\item{\code{num_cores}}{The number of CPU cores to use to parallelize the sampling during randomization-based inference 
(which is very slow). The default is 1 for serial computation. This parameter is ignored
for \code{test_type = "MLE-or-KM-based"}.}

\item{\code{verbose}}{A flag indicating whether messages should be displayed to the user. Default is \code{TRUE}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `SeqDesignTest` object.
Set Custom Randomization Statistic Computation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesignInference-set_custom_randomization_statistic_function"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesignInference-set_custom_randomization_statistic_function}{}}}
\subsection{Method \code{set_custom_randomization_statistic_function()}}{
For advanced users only. This allows changing the default estimate inside randomization tests and interval construction.
For example, when the response is continuous, instead of using ybarT - ybarC, you may want to use the studentized version
i.e., (ybarT - ybarC) / sqrt(s^2_T / n_T + s^2_C / n_C). Work by Chung & Romano (2013, Annals of Statistics), 
Janssen (1997), and others shows that studentized permutation tests are asymptotically valid and often asymptotically optimal.
In finite samples, the studentized test often approximates a pivotal distribution better, leading to higher power.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesignInference$set_custom_randomization_statistic_function(
  custom_randomization_statistic_function
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{custom_randomization_statistic_function}}{A function that is run that returns a scalar value representing the statistic of interest
which is computed during each iteration sampling from the null distribution as w is drawn
drawn from the design. This function is embedded into this class and has write access to all of 
its data and functions (both public and private) so be careful! Setting this to NULL removes 
whatever function was set previously essentially. When there is no custom function, the default 
\code{self$compute_treatment_estimate()} will be run.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{seq_des = SeqDesign$new(n = 6, p = 10, design = "CRD")
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[2, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[3, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[4, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[5, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[6, 2 : 10])
seq_des$add_all_subject_responses(c(4.71, 1.23, 4.78, 6.11, 5.95, 8.43))

seq_des_inf = SeqDesignInferenceAllSimpleMeanDiff$new(seq_des)
#now let's set the statistic during randomization tests and intervals to the 
#studentized average difference (the t stat). 
seq_des_inf$set_custom_randomization_statistic_function(function(){
   yTs = private$seq_des_obj_priv_int$y[private$seq_des_obj_priv_int$w == 1]
  yCs = private$seq_des_obj_priv_int$y[private$seq_des_obj_priv_int$w == 0]
  (mean(yTs) - mean(yCs)) / sqrt(var(yTs) / length(yTs) + var(yCs) / length(yCs))
})
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesignInference-approximate_bootstrap_distribution_beta_hat_T"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesignInference-approximate_bootstrap_distribution_beta_hat_T}{}}}
\subsection{Method \code{approximate_bootstrap_distribution_beta_hat_T()}}{
Creates the boostrap distribution of the estimate for the treatment effect
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesignInference$approximate_bootstrap_distribution_beta_hat_T(B = 501)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{B}}{Number of bootstrap samples. The default is 501.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of length \code{B} with the bootstrap values of the estimates of the treatment effect
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{seq_des = SeqDesign$new(n = 6, p = 10, design = "CRD")
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[2, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[3, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[4, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[5, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[6, 2 : 10])
seq_des$add_all_subject_responses(c(4.71, 1.23, 4.78, 6.11, 5.95, 8.43))

seq_des_inf = SeqDesignInference$new(seq_des, test_type = "MLE-or-KM-based")
beta_hat_T_bs = seq_des_inf$approximate_bootstrap_distribution_beta_hat_T()
ggplot(data.frame(beta_hat_T_bs = beta_hat_T_bs)) + geom_histogram(aes(x = beta_hat_T_bs))
			
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesignInference-compute_bootstrap_confidence_interval"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesignInference-compute_bootstrap_confidence_interval}{}}}
\subsection{Method \code{compute_bootstrap_confidence_interval()}}{
Computes a 1-alpha level frequentist bootstrap confidence interval differently for all response types, estimate types and test types.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesignInference$compute_bootstrap_confidence_interval(
  alpha = 0.05,
  B = 501,
  na.rm = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{alpha}}{The confidence level in the computed confidence interval is 1 - \code{alpha}. The default is 0.05.}

\item{\code{B}}{Number of bootstrap samples. The default is NA which corresponds to B=501.}

\item{\code{na.rm}}{Should we remove beta_hat_T's that are NA's? Default is \code{FALSE}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A (1 - alpha)-sized frequentist confidence interval for the treatment effect
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{seq_des = SeqDesign$new(n = 6, p = 10, design = "CRD")
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[2, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[3, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[4, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[5, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[6, 2 : 10])
seq_des$add_all_subject_responses(c(4.71, 1.23, 4.78, 6.11, 5.95, 8.43))

seq_des_inf = SeqDesignInference$new(seq_des, test_type = "MLE-or-KM-based")
seq_des_inf$compute_confidence_interval()
					
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesignInference-compute_bootstrap_two_sided_pval"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesignInference-compute_bootstrap_two_sided_pval}{}}}
\subsection{Method \code{compute_bootstrap_two_sided_pval()}}{
Computes a bootstrap two-sided p-value for H_0: betaT = delta. 
It does so differently for all response types, estimate types and test types.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesignInference$compute_bootstrap_two_sided_pval(
  delta = 0,
  B = 501,
  na.rm = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{delta}}{The null difference to test against. For any treatment effect at all this is set to zero (the default).}

\item{\code{B}}{Number of bootstrap samples. The default is NA which corresponds to B=501.}

\item{\code{na.rm}}{Should we remove beta_hat_T's that are NA's? Default is \code{FALSE}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The approximate frequentist p-value
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{seq_des = SeqDesign$new(n = 6, p = 10, design = "CRD")
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[2, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[3, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[4, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[5, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[6, 2 : 10])
seq_des$add_all_subject_responses(c(4.71, 1.23, 4.78, 6.11, 5.95, 8.43))

seq_des_inf = SeqDesignInference$new(seq_des, test_type = "MLE-or-KM-based")
seq_des_inf$compute_bootstrap_two_sided_pval()
					
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesignInference-compute_beta_hat_T_randomization_distr_under_sharp_null"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesignInference-compute_beta_hat_T_randomization_distr_under_sharp_null}{}}}
\subsection{Method \code{compute_beta_hat_T_randomization_distr_under_sharp_null()}}{
Under the sharp null of 
forall i H_0: y_i_T - y_i_C = delta 
there will be a distribution of the estimates of the treatment effect (over many realizations of assignments)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesignInference$compute_beta_hat_T_randomization_distr_under_sharp_null(
  nsim_exact_test = 501,
  delta = 0,
  transform_responses = "none"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{nsim_exact_test}}{The number of randomization vectors to use. The default is 501.}

\item{\code{delta}}{The null difference to test against. For any treatment effect at all this is set to zero (the default).}

\item{\code{transform_responses}}{"none" for no transformation (default), "log" for log (your option when response type is survival) and 
"logit" for logit (your option when response type is proportion). This is mostly an 
internal parameter set to something besides "none" when computing randomization confidence intervals
for survival and proportion response types.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of size \code{nsim_exact_test} that has the values of beta_hat_T over many w draws.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{seq_des = SeqDesign$new(n = 6, p = 10, design = "CRD")
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[2, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[3, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[4, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[5, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[6, 2 : 10])
seq_des$add_all_subject_responses(c(4.71, 1.23, 4.78, 6.11, 5.95, 8.43))

seq_des_inf = SeqDesignInference$new(seq_des)
beta_hat_T_diff_ws = seq_des_inf$compute_beta_hat_T_randomization_distr_under_sharp_null()
ggplot(data.frame(beta_hat_T_diff_ws = beta_hat_T_diff_ws)) + geom_histogram(aes(x = beta_hat_T_diff_ws))
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesignInference-compute_two_sided_pval_for_treatment_effect_rand"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesignInference-compute_two_sided_pval_for_treatment_effect_rand}{}}}
\subsection{Method \code{compute_two_sided_pval_for_treatment_effect_rand()}}{
Fisher's randomization test which means that H_0: y_i_T - y_i_C = delta for all subjects
either the classic different-in-means estimate of the additive treatment effect, 
i.e. ybar_T - ybar_C or the default_regression estimate of the additive treatment effect linearly i.e. 
the treatment different adjusted linearly for the p covariates.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesignInference$compute_two_sided_pval_for_treatment_effect_rand(
  nsim_exact_test = 501,
  delta = 0,
  transform_responses = "none",
  na.rm = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{nsim_exact_test}}{The number of randomization vectors to use in the randomization test (ignored if \code{test_type}
is not "randomization-exact"). The default is 501 providing pvalue resolution to a fifth of a percent.}

\item{\code{delta}}{The null difference to test against. For any treatment effect at all this is set to zero (the default).}

\item{\code{transform_responses}}{"none" for no transformation (default), "log" for log and "logit" for logit. This is mostly an 
internal parameter set something besides "none" when computing randomization confidence intervals
for non-continuous responses.}

\item{\code{na.rm}}{Should we remove beta_hat_T's that are NA's? Default is \code{FALSE}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The approximate frequentist p-value
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{seq_des = SeqDesign$new(n = 6, p = 10, design = "CRD")
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[2, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[3, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[4, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[5, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[6, 2 : 10])
seq_des$add_all_subject_responses(c(4.71, 1.23, 4.78, 6.11, 5.95, 8.43))

seq_des_inf = SeqDesignInference$new(seq_des)
seq_des_inf$compute_two_sided_pval_for_treatment_effect()
		
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesignInference-compute_confidence_interval_rand"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesignInference-compute_confidence_interval_rand}{}}}
\subsection{Method \code{compute_confidence_interval_rand()}}{
Computes a 1-alpha level frequentist confidence interval for the randomization test

Here we invert the randomization test that tests the strong null H_0: y_T_i - y_C_i = delta <=> (y_T_i - delta) - y_C_i = 0 so 
we adjust the treatment responses downward by delta. We then find the set of all delta values that is above 1 - alpha/2 (i.e. two-sided)
This is accomplished via a bisection algorithm (algorithm 1 of Glazer and Stark, 2025 available at
https://arxiv.org/abs/2405.05238). These confidence intervals are exact to within tolerance \code{pval_epsilon}.
As far as we know, this only works for response type continuous, uncensored survival (where we work in log-time and then
return to natural time when finished) and proportion (where we work in logit-rate and return to rate when finished).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesignInference$compute_confidence_interval_rand(
  alpha = 0.05,
  nsim_exact_test = 501,
  pval_epsilon = 0.005
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{alpha}}{The confidence level in the computed confidence interval is 1 - \code{alpha}. The default is 0.05.}

\item{\code{nsim_exact_test}}{The number of randomization vectors (applicable for test type "randomization-exact" only). 
The default is 1000 providing good resolutions to confidence intervals.}

\item{\code{pval_epsilon}}{The bisection algorithm tolerance for the test inversion (applicable for test type "randomization-exact" only). 
The default is to find a CI accurate to within 0.005.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A 1 - alpha sized frequentist confidence interval for the treatment effect
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{seq_des = SeqDesign$new(n = 6, p = 10, design = "CRD")
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[1, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[2, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[3, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[4, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[5, 2 : 10])
seq_des$add_subject_to_experiment_and_assign(MASS::biopsy[6, 2 : 10])
seq_des$add_all_subject_responses(c(4.71, 1.23, 4.78, 6.11, 5.95, 8.43))

seq_des_inf = SeqDesignInference$new(seq_des, test_type = "MLE-or-KM-based")
seq_des_inf$compute_confidence_interval()
		
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SeqDesignInference-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SeqDesignInference-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeqDesignInference$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
