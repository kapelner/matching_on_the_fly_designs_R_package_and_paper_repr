Package: SeqExpMatch
Type: Package
Title: Sequential Experimental Design via Matching on-the-Fly
Version: 2.0.0
Authors@R: c(
        person("Adam", "Kapelner", email = "kapelner@qc.cuny.edu", role = c("aut", "cre"), comment = c(ORCID = "0000-0001-5985-6792")),
        person("Abba", "Krieger", email = "krieger@wharton.upenn.edu", role = "aut")
    )
Description: Generates the following sequential two-arm experimental designs:
    (1) completely randomized (Bernoulli)
    (2) balanced completely randomized
    (3) Efron's (1971) Biased Coin
    (4) Atkinson's (1982) Covariate-Adjusted Biased Coin
    (5) Kapelner and Krieger's (2014) Covariate-Adjusted Matching on the Fly
    (6) Kapelner and Krieger's (2021) CARA Matching on the Fly with Differential Covariate Weights (Naive)
    (7) Kapelner and Krieger's (2021) CARA Matching on the Fly with Differential Covariate Weights (Stepwise)
    and also provides the following types of inference:
    (1) estimation (with both Z-style estimators and OLS estimators), 
    (2) frequentist testing (via asymptotic distribution results and via employing the nonparametric randomization test) and
    (3) frequentist confidence intervals (only under the superpopulation sampling assumption currently). Details can be found
    in our publication: Kapelner and Krieger "A Matching Procedure for Sequential Experiments that Iteratively Learns which 
    Covariates Improve Power" (2020) <arXiv:2010.05980>. We now offer support for incidence, count, proportion and survival 
    (with censoring) outcome types. We also have support for adding responses whenever they become available, and we can impute
    missing data in the subjects' covariate records (where each covariate record can thereby have different information). On 
    the inference side, there is built-in support for many types of parametric models such as random effects for incidence 
    outcomes and count outcomes. There is Kaplan-Meier estimation, weibull and coxph models for survival outcomes.
License: GPL-3
Encoding: UTF-8
Depends:
	R6,
	checkmate,
	Rcpp (>= 1.0.14),
	RcppEigen,
	data.table,
	glmnet,
	survival,
	statmod,
	numDeriv,
	missRanger,
	missForest,
	nbpMatching
LinkingTo: 
	doParallel,	
	RcppEigen,
	Rcpp
Imports:
    checkmate    
URL: https://github.com/kapelnematching_on_the_fly_designs_R_package_and_paper_repr
RoxygenNote: 7.3.2
Collate:
    'RcppExports.R'
    'SeqExpMatch.R'
    'helper_functions.R'
    'model_fit_helpers.R'
    'abstract_design.R'
    'design_crd.R'
    'design_ibcrd.R'
    'design_Atkinson.R'
    'design_Efron.R'
    'design_KK14.R'
    'design_KK21.R'
    'design_KK21_stepwise.R'
    'abstract_inference.R'
    'abstract_inference_KK_passthrough.R'
    'abstract_inference_KK_passthrough_compound.R'
    'abstract_inference_mle_or_KM_for_GLMs.R'
    'abstract_inference_mle_or_KM_summary_table.R'
    'inference__all_naive_mean_diff.R'
    'inference__all_KK_compound_mean_diff.R'
    'abstract_inference_bai_et_al.R'
    'inference_bai_et_al_KK14.R'
    'inference_bai_et_al_KK21.R'
    'inference_bai_et_al_KK21stepwise.R'
    'inference_continuous_multivariate_ols.R'
    'inference_continuous_KK_compound_multivariate_ols.R'
    'inference_incidence_univariate_log_regr.R'
    'inference_incidence_multivariate_log_regr.R'
    'inference_count_univariate_negbin_regr.R'
    'inference_count_multivariate_negbin_regr.R'
    'inference_proportion_univariate_beta_regr.R'
    'inference_proportion_multivariate_beta_regr.R'
    'inference_survival_KM.R'
    'inference_survival__restricted_mean_diff.R'
    'inference_survival_univariate_weibull_regr.R'
    'inference_survival_multivariate_weibull_regr.R'
    'inference_survival_univariate_coxph_regr.R'
    'inference_survival_multivariate_coxph_regr.R'
    'zzz.R'
